generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id               Int              @id(map: "recipes_pkey") @default(autoincrement())
  name             String           @db.VarChar(255)
  imageUrl         String?          @db.VarChar(255)
  srcUrl           String?          @db.VarChar(255)
  description      String?          @db.VarChar(255)
  userId           Int
  user             User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipeCategories RecipeCategory[]
  reviews          Review[]
}

model Category {
  id               Int              @id @default(autoincrement())
  category         String           @unique(map: "Category_category_unique") @db.VarChar(255)
  recipeCategories RecipeCategory[]
}

model RecipeCategory {
  recipeId   Int
  categoryId Int
  userId     Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  recipe     Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([recipeId, categoryId])
}

model Review {
  id       Int     @id(map: "recipe_ratings_pkey") @default(autoincrement())
  recipeId Int
  comment  String? @db.VarChar(512)
  rating   Int
  userId   Int
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe   Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "recipe_rating_recipe_id_fkey")
}

model User {
  id               Int              @id @default(autoincrement())
  name             String           @db.VarChar(255)
  email            String           @unique(map: "User_email_unique") @db.VarChar(255)
  password         String           @db.VarChar(255)
  recipes          Recipe[]
  recipeCategories RecipeCategory[]
  reviews          Review[]
}
